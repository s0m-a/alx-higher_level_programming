============================
``0-add_integer`` module
============================

``add_integer()`` will take two arguments that must be integers and then add
them together with the ``+`` operator.

::

Importing function from the module:
    >>> add_integer = __import__('0-add_integer').add_integer

Now Use it
    >>> add_integer(0, 2)
    2

    >>> add_integer(1, 4)
    5

    >>> add_integer(0, -9)
    -9

    >>> add_integer(900.1, 2)
    902

    
    >>> add_integer(1000.1, -1000.9)
    0

    >>> add_integer(0)
    98

    >>> add_integer(-99)
    -1

    >>> add_integer(0.0, None)
    Traceback (most recent call last):
	    ...
    TypeError: b must be an integer

    >>> add_integer("input", 1)
    Traceback (most recent call last):
	    ...
    TypeError: a must be an integer


    >>> add_integer(None)
    Traceback (most recent call last):
	      ...
    TypeError: a must be an integer

    >>> add_integer('5', 3)
    Traceback (most recent call last):
              ...
    TypeError: a must be an integer

    >>> add_integer((21, 61))
    Traceback (most recent call last):
              ...
    TypeError: a must be an integer

    >>> add_integer(3, [])
    Traceback (most recent call last):
	      ...
    TypeError: b must be an integer

    >>> add_integer(45, float("nan"))
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer
