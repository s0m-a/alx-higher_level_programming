The ``1-my_list`` module
======================
Using ``MyList``
-------------------

Import the function in the module:
        >>> MyList = __import__("1-my_list").MyList

Testing the  module docstring:
         >>> x = __import__("1-my_list").__doc__
         >>> len(x) > 1
         True
Testing the method docstring:
	 >>> m = __import__("1-my_list").MyList.print_sorted.__doc__
	 >>> len(m) > 1
	 True
Testing the class docstring:
         >>> y = __import__("1-my_list").MyList.__doc__
         >>> len(y) > 1
         True
Checking for empty list:
	 >>> a = MyList()
	 >>> a.print_sorted()
	 []
Testing that MyList inherit the  list:
	 >>> issubclass(MyList, list)
	 True

Testing that append:
	 >>> a.append(2)
	 >>> a.append(4)
	 >>> a.append(6)
	 >>> a.append(8)
	 >>> print(a)
	 [2, 4, 6, 8]

Testing for lists sort function:
	 >>> l.print_sorted()
	 [2, 4, 6, 8]

Testing for too many arguments:
	 >>> l.print_sorted(1)
	 Traceback (most recent call last):
	 ...
	 TypeError: print_sorted() takes 1 positional argument but 2 were given

Testing for reversed order list:
	 >>> a = MyList()
	 >>> a.append(8)
	 >>> a.append(6)
	 >>> a.append(4)
	 >>> a.append(2)
	 >>> print(a)
	 [8, 6, 4, 2]
	 >>> a.print_sorted()
	 [2, 4, 6, 8]
	 >>> print(a)
	 [8, 6, 4, 2]


Testing for negative numbers:
	 >>> a.append(7)
	 >>> a.append(-2)
	 >>> print(a)
	 [8, 6, 4, 2, 7, -2]
	 >>> a.print_sorted()
	 [-2, 2, 4, 6, 8, 7]
	 >>> print(a)
	 [8, 6, 4, 2, 7, -2]
